version: '2'

volumes:
  microauth_postgres_data_dev: {}
  postgres_data_dev: {}
  postgres_backup_dev: {}

services:
  microauth_postgres:
    build: ./docker/postgres
    volumes:
      - microauth_postgres_data_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=microauth
      - POSTGRES_PASSWORD=microauth
      - POSTGRES_DB=microauth

  microauth:
    image: jc2k/microauth:dev
    depends_on:
      - microauth_postgres
    command: /gunicorn.sh
    user: flask
    environment:
    - POSTGRES_USER=microauth
    - POSTGRES_PASSWORD=microauth
    - POSTGRES_HOST=microauth_postgres

  postgres:
    build: ./docker/postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_backup_dev:/backups
    environment:
      - POSTGRES_USER=agentless
      - POSTGRES_PASSWORD=agentless
      - POSTGRES_DB=agentless

  flask:
    build:
      context: .
      dockerfile: ./docker/flask/Dockerfile-dev
    command: /start-dev.sh
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=agentless
      - POSTGRES_PASSWORD=agentless
      - DATABASE_URI=postgres://agentless:agentless@postgres/agentless
      - MICROAUTH_ACCESS_KEY_ID=gatekeeper
      - MICROAUTH_SECRET_ACCESS_KEY=keymaster
    volumes:
      - .:/app/src
    ports:
      - "8000:8000"
    links:
      - postgres
